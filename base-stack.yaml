AWSTemplateFormatVersion: 2010-09-09
Description: Base Stack
Parameters:
  TagPrefix:
    Type: String
  TemplateFileName:
    Default: packaged-stack.yaml
    Type: String
  Email:
    Type: String
  GitHubOAuthToken:
    Description: Create a token with 'repo' and 'admin:repo_hook' permissions here https://github.com/settings/tokens
    Type: String
  GitHubUser:
    Description: Enter GitHub userName of the repository owner
    Type: String
  GitHubRepository:
    Type: String
  GitHubBranch:
    Type: String
    Default: master

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: CodePipeline Settings
        Parameters:
          - TemplateFileName
          - Email
      - Label:
          default: Github Settings
        Parameters:
          - GitHubOAuthToken
          - GitHubUser
          - GitHubRepository
          - GitHubBranch

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint:
            Ref: Email
          Protocol: email

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location:
          Ref: S3Bucket
        Type: S3
      DisableInboundStageTransitions: []
      RoleArn:
        Fn::GetAtt: [PipelineRole, Arn]
      Stages:
        - Name: GithubTestSource
          Actions:
            - Name: GitHub
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner:
                  Ref: GitHubUser
                Repo:
                  Ref: GitHubRepository
                Branch:
                  Ref: GitHubBranch
                OAuthToken:
                  Ref: GitHubOAuthToken
                PollForSourceChanges: true
              OutputArtifacts:
                - Name: TemplateSource
              RunOrder: 1

        - Name: DevStage
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                RoleArn:
                  Fn::GetAtt: CFNRole.Arn
                StackName:
                  Fn::Sub: ${TagPrefix}-Dev
                ChangeSetName: DevChangeSet
                TemplatePath:
                  Fn::Sub: TemplateSource::dist/${TemplateFileName}
                TemplateConfiguration:
              RunOrder: 2

            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: DevChangeSet
                RoleArn:
                  Fn::GetAtt: [CFNRole, Arn]
                StackName:
                  Fn::Sub: ${TagPrefix}-Dev
              RunOrder: 3
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - "iam:*"
                  - "lambda:*"
                  - "iot:*"
                  - "rds:*"
                  - "ec2:*"
                  - "apigateway:*"
                  - "cloudformation:*"
                  - "cognito-idp:*"
                  - "cognito-identity:*"
                  - "dynamodb:*"
                  - "s3:*"
                Effect: Allow
                Resource: '*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                Effect: Allow
                Resource: '*'

Outputs:
  S3Bucket:
    Value:
      Ref: S3Bucket
  CodePipelineURL:
    Value:
      Fn::Sub: "https://${AWS::Region}.console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${TagPrefix}-DevPipeline"